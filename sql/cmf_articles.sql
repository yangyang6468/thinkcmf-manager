/*
Navicat MySQL Data Transfer

Source Server         : local
Source Server Version : 50640
Source Host           : localhost:3306
Source Database       : admin

Target Server Type    : MYSQL
Target Server Version : 50640
File Encoding         : 65001

Date: 2018-08-13 18:47:37
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for cmf_articles
-- ----------------------------
DROP TABLE IF EXISTS `cmf_articles`;
CREATE TABLE `cmf_articles` (
  `createtime` int(11) NOT NULL DEFAULT '0' COMMENT '创建时间',
  `updatetime` int(11) NOT NULL DEFAULT '0' COMMENT '更新时间',
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增标识消息id',
  `category_id` tinyint(4) NOT NULL DEFAULT '0' COMMENT '分类',
  `title` varchar(100) NOT NULL COMMENT '消息标题',
  `info` longtext NOT NULL COMMENT '消息内容',
  `photo` varchar(250) DEFAULT NULL COMMENT '封面图片路径地址',
  `collect_count` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '收藏次数',
  `comment_count` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '评论次数',
  `click_count` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '点击数',
  `userid` int(11) NOT NULL DEFAULT '0' COMMENT '发表用户id',
  `sticky` int(11) NOT NULL DEFAULT '0' COMMENT '是否置顶0否1是',
  `recommend` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否推荐 0 否 1 是',
  `stickytime` int(11) NOT NULL DEFAULT '0' COMMENT '置顶时间',
  `status` int(11) NOT NULL DEFAULT '1' COMMENT '审核状态：0不发布 1发布',
  `isdelete` int(11) NOT NULL DEFAULT '0' COMMENT '是否删除',
  `rewardtotal` bigint(20) NOT NULL DEFAULT '0' COMMENT '打赏总金额',
  `rewardcount` bigint(20) unsigned NOT NULL DEFAULT '0' COMMENT '打赏总人数',
  `flag` tinyint(2) unsigned NOT NULL DEFAULT '2' COMMENT '前后台标志 1 前台 2 后台',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='文章表';

-- ----------------------------
-- Records of cmf_articles
-- ----------------------------
INSERT INTO `cmf_articles` VALUES ('1534129967', '1534129967', '1', '3', 'mysql Error Code : 1060 Duplicate column ‘*’', '&lt;p&gt;&lt;span style=&quot;font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255); font-size: medium;&quot;&gt;今天遇到了一个异常：mysql Error Code : 1060 Duplicate column name &amp;#39;ID&amp;#39;&amp;nbsp;&lt;br/&gt;上网搜了搜：&lt;/span&gt;&lt;span style=&quot;font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255); font-size: medium;&quot;&gt;这个错误是说有重复的字段ID了，当时以为是表的有重复字段或是数据中有重复ID数据了，其实不是，错误是在sql语句中，&amp;nbsp;&lt;br/&gt;&lt;br/&gt;select * from&amp;nbsp; service_domaintransfer p left join (select * from service_transferwhois )tw&amp;nbsp; on p.domain_name = tw.domain_name where 1=1&amp;nbsp; and p.transfer_type =&amp;nbsp;&amp;nbsp; &amp;#39;02&amp;#39; order by p.agent_code,p.id&amp;nbsp;&lt;br/&gt;&lt;br/&gt;由于前面的select * 中的整个*没有指定是所以抱的错，只要改成想要的就行了（select sd.*或者select sr.*）,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;', 'admin/20180702/4db79dbe69d7583ebb72b8cd4617eca2.png', '0', '0', '0', '19', '0', '0', '0', '1', '0', '0', '0', '2');
INSERT INTO `cmf_articles` VALUES ('1534130327', '1534130327', '2', '5', 'workman 和swoole 区别 和异同', '&lt;p class=&quot;f16&quot; style=&quot;box-sizing: border-box; outline: 0px; padding: 0px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); line-height: 26px; text-align: justify; word-break: break-all; white-space: normal; text-indent: 2em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);&quot;&gt;workerman是一个高性能的PHP socket 服务器框架，workerman基于PHP多进程以及libevent事件轮询库，PHP开发者只要实现一两个接口，便可以开发出自己的网络应用，例如Rpc服务、聊天室服务器、手机游戏服务器等。&lt;/p&gt;&lt;p class=&quot;f16&quot; style=&quot;box-sizing: border-box; outline: 0px; padding: 0px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); line-height: 26px; text-align: justify; word-break: break-all; white-space: normal; text-indent: 2em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);&quot;&gt;workerman的目标是让PHP开发者更容易的开发出基于socket的高性能的应用服务，而不用去了解PHP socket以及PHP多进程细节。 workerman本身是一个PHP多进程服务器框架，具有PHP进程管理以及socket通信的模块，所以不依赖php-fpm、nginx或者apache等这些容器便可以独立运行&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'admin/20180813/890b953322ab77a95d452c25331f58ae.jpg', '0', '0', '0', '19', '0', '0', '0', '1', '0', '0', '0', '2');
INSERT INTO `cmf_articles` VALUES ('1534151540', '1534151540', '3', '6', 'JS截取字符串方法实例', '&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;1.函数：split()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：使用一个指定的分隔符把一个字符串分割存储到数组&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子： str=”jpg|bmp|gif|ico|png”; arr=str.split(”|”);&lt;br/&gt;//arr是一个包含字符值”jpg”、”bmp”、”gif”、”ico”和”png”的数组&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;2.函数：join()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：使用您选择的分隔符将一个数组合并为一个字符串&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子： var delimitedString=myArray.join(delimiter);&lt;br/&gt;var myList=new Array(”jpg”,”bmp”,”gif”,”ico”,”png”);&lt;br/&gt;var portableList=myList.join(”|”);&lt;br/&gt;//结果是jpg|bmp|gif|ico|png&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;3.函数:concat（）&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：将两个数组连接在一起；&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子：arr1=[1,2,3,4]&lt;br/&gt;　　arr2=[5,6,7,8]&lt;br/&gt;　　alert(arr1.concat(arr2)) //结果为[1,2,3,4,5,6,7,8]&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;4.函数:charAt()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：返回指定位置的字符。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子:var str=&amp;#39;a,g,i,d,o,v,w,d,k,p&amp;#39;&lt;br/&gt;alert(str.charAt(2)) //结果为g&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;5:函数:charCodeAt()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。这个返回值是 0 - 65535 之间的整数。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子：var str=&amp;#39;a,g,i,d,o,v,w,d,k,p&amp;#39;&lt;br/&gt;alert(str.charCodeAt(2)) //结果为103。即g的Unicode编码为103&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;6.函数:slice()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;功能：arrayObject.slice(start,end)&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;　　start:必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;　　end:可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;　　返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子：var str=&amp;#39;ahji3o3s4e6p8a0sdewqdasj&amp;#39;&lt;br/&gt;　　alert(str.slice(2,5)) //结果ji3&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;7.函数:substring()&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;定义和用法 substring 方法用于提取字符串中介于两个指定下标之间的字符。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;语法 stringObject.substring(start,stop)&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;start 必需。一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;stop 可选。一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;如果省略该参数，那么返回的子串会一直到字符串的结尾。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;返回 一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。 说明 substring 方法返回的子串包括 start 处的字符，但不包括 end 处的字符。 如果 start 与 end 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。 如果 start 比 end 大，那么该方法在提取子串之前会先交换这两个参数。 如果 start 或 end 为负数，那么它将被替换为 0。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;例子:var str=&amp;#39;ahji3o3s4e6p8a0sdewqdasj&amp;#39;&lt;br/&gt;alert(str.substring(2,6)) //结果为ji3o3&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;line-height: 25.2px; color: rgb(0, 0, 255);&quot;&gt;8.函数:substr&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;定义和用法 substr 方法用于返回一个从指定位置开始的指定长度的子字符串。&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;语法 stringObject.substr(start [, length ])&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;参数 start 必需。所需的子字符串的起始位置。字符串中的第一个字符的索引为 0。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; outline: none; font-size: 14px; line-height: 30px; color: rgb(34, 34, 34); font-family: tahoma, arial, &amp;quot;Microsoft YaHei&amp;quot;; white-space: normal; background-color: rgb(255, 255, 255);&quot;&gt;length 可选。在返回的子字符串中应包括的字符个数。 说明 如果 length 为 0 或负数，将返回一个空字符串。 如果没有指定该参数，则子字符串将延续到stringObject的最后。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', 'admin/20180806/72c7fea68edb0ceb1a960e4d9adba44a.jpg', '0', '0', '0', '7', '0', '0', '0', '1', '0', '0', '0', '2');
